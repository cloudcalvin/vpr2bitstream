<!--
 Architecture file for testing the custom switch block format (as well as enhanced connection block descriptions and routing mux delay tables) 

  * This is a Lattice ECP-like architecture.
  * Logic block and routing mux area/delay values have been extracted from COFFE (Chiasson, Betz 2013) using the 22nm node.
  * I/O, BRAM and DSP blocks have been adapted from the 40nm Stratix IV-like architecture file, with areas scaled to 22nm
    but delay values unchanged.

  * The inter-LB routing network uses length-2 wire segments on the semi-global metal layer for 85% of the channel width and 15% 
    length-4 wire segments on the global metal layer. Global layer length-4 wires are accessible from block output pins only, and
    can drive other global-layer wires as well as the semi-global length-2's (on-CB, off-SB topology).
      * Custom switch blocks descriptions, modified connection block descriptions and routing mux delay tables are used describe this topology.
      * Custom switch block descriptions have been elongated somewhat to expose more of the format features.
      * See VTR documentation for more info on the enhanced inter-LB interconnect specifications.
 --><architecture>
  
  <!-- ODIN II specific config -->
  <models>
    <!--<model name="multiply">-->
      <!--<input_ports>-->
      <!--<port name="a" combinational_sink_ports="out"/>-->
      <!--<port name="b" combinational_sink_ports="out"/>-->
      <!--</input_ports>-->
      <!--<output_ports>-->
      <!--<port name="out"/>-->
      <!--</output_ports>-->
    <!--</model>-->

    <!--<model name="single_port_ram">-->
      <!--<input_ports>-->
      <!--<port name="we" clock="clk"/>     &lt;!&ndash; control &ndash;&gt;-->
      <!--<port name="addr" clock="clk"/>  &lt;!&ndash; address lines &ndash;&gt;-->
      <!--<port name="data" clock="clk"/>  &lt;!&ndash; data lines can be broken down into smaller bit widths minimum size 1 &ndash;&gt;-->
      <!--<port name="clk" is_clock="1"/>  &lt;!&ndash; memories are often clocked &ndash;&gt;-->
      <!--</input_ports>-->
      <!--<output_ports>-->
      <!--<port name="out" clock="clk"/>   &lt;!&ndash; output can be broken down into smaller bit widths minimum size 1 &ndash;&gt;-->
      <!--</output_ports>-->
    <!--</model>-->

    <!--<model name="dual_port_ram">-->
      <!--<input_ports>-->
      <!--<port name="we1" clock="clk"/>     &lt;!&ndash; write enable &ndash;&gt;-->
      <!--<port name="we2" clock="clk"/>     &lt;!&ndash; write enable &ndash;&gt;-->
      <!--<port name="addr1" clock="clk"/>  &lt;!&ndash; address lines &ndash;&gt;-->
      <!--<port name="addr2" clock="clk"/>  &lt;!&ndash; address lines &ndash;&gt;-->
      <!--<port name="data1" clock="clk"/>  &lt;!&ndash; data lines can be broken down into smaller bit widths minimum size 1 &ndash;&gt;-->
      <!--<port name="data2" clock="clk"/>  &lt;!&ndash; data lines can be broken down into smaller bit widths minimum size 1 &ndash;&gt;-->
      <!--<port name="clk" is_clock="1"/>  &lt;!&ndash; memories are often clocked &ndash;&gt;-->
      <!--</input_ports>-->
      <!--<output_ports>-->
      <!--<port name="out1" clock="clk"/>   &lt;!&ndash; output can be broken down into smaller bit widths minimum size 1 &ndash;&gt;-->
      <!--<port name="out2" clock="clk"/>   &lt;!&ndash; output can be broken down into smaller bit widths minimum size 1 &ndash;&gt;-->
      <!--</output_ports>-->
    <!--</model>-->

  </models>
  <!-- ODIN II specific config ends -->
 
  <!-- Physical descriptions begin -->
  <layout auto="1.0"/>
		<device>
			<sizing R_minW_nmos="13090.000000" R_minW_pmos="19086.831111" ipin_mux_trans_size="1.2"/>
			<timing C_ipin_cblock="2e-15" T_ipin_cblock="7.562e-11"/>	
			<area grid_logic_tile_area="0"/>
			<chan_width_distr>
				<io width="1.000000"/>
				<x distr="uniform" peak="1.000000"/>
				<y distr="uniform" peak="1.000000"/>
			</chan_width_distr>
			<switch_block type="custom"/>
		</device>
		<switchlist>
			<!-- l2s_mux drives length-2 wires on the semi-global metal layer -->
			<switch type="mux" name="l2s_mux" R="878" Cin="2e-15" Cout="0.000000e+00" mux_trans_size="1.5" buf_size="14.2000000">
				<Tdel num_inputs="6" delay="5.65e-11"/>
				<Tdel num_inputs="15" delay="6.84e-11"/>
			</switch>
			<!-- l4g_mux drives length-4 wires on the global metal layer -->
			<switch type="mux" name="l4g_mux" R="448" Cin="1.8e-15" Cout="0.000000e+00" mux_trans_size="1.5" buf_size="20.0000000">
				<Tdel num_inputs="12" delay="5.93e-11"/>
				<Tdel num_inputs="25" delay="7.35e-11"/>
			</switch>
		</switchlist>
		<segmentlist>
			<!-- 85% length-2 wires on the semi-global metal layer -->
			<segment freq="0.85" name="l2s" length="2" type="unidir" Rmetal="174" Cmetal="0.0">
				<mux name="l2s_mux"/>
				<sb type="pattern">1 1 1</sb>
				<cb type="pattern">1 1</cb>
			</segment>
			<!-- 15% length-4 wires on the global metal layer -->
			<segment freq="0.15" name="l4g" length="4" type="unidir" Rmetal="23" Cmetal="0.0">
				<mux name="l4g_mux"/>
				<sb type="pattern">1 1 1 1 1</sb>
				<cb type="pattern">1 0 0 0</cb>
			</segment>
		</segmentlist>

		<!-- Define custom switch blocks -->
		<switchblocklist>
		<switchblock name="wilton_turn_core" type="unidir">
			<switchblock_location type="EVERYWHERE"/>
			<switchfuncs>
				<func type="lt" formula="W-t"/>
				<func type="lb" formula="t-1"/>
				<func type="rt" formula="t-1"/>
				<func type="br" formula="W-t-2"/>
				<func type="tl" formula="W-t"/>
				<func type="bl" formula="t+1"/>
				<func type="tr" formula="t+1"/>
				<func type="rb" formula="W-t-2"/>
			</switchfuncs>
			<wireconn from_type="l2s" to_type="l2s" from_switchpoint="0" to_switchpoint="0"/>
			<wireconn from_type="l2s" to_type="l2s" from_switchpoint="1" to_switchpoint="0"/>
			<wireconn from_type="l4g" to_type="l4g" from_switchpoint="0" to_switchpoint="0"/>
			<wireconn from_type="l4g" to_type="l2s" from_switchpoint="0" to_switchpoint="0"/>
		</switchblock>

		<!--<switchblock name="wilton_turn_perimeter" type="unidir">-->
			<!--<switchblock_location type="PERIMETER"/>-->
			<!--<switchfuncs>-->
				<!--<func type="lt" formula="W-t"/>-->
				<!--<func type="lb" formula="t-1"/>-->
				<!--<func type="rt" formula="t-1"/>-->
				<!--<func type="br" formula="W-t-2"/>-->
				<!--<func type="tl" formula="W-t"/>-->
				<!--<func type="bl" formula="t+1"/>-->
				<!--<func type="tr" formula="t+1"/>-->
				<!--<func type="rb" formula="W-t-2"/>-->
			<!--</switchfuncs>-->
			<!--<wireconn from_type="l2s" to_type="l2s" from_switchpoint="0,1" to_switchpoint="0"/>-->
			<!--<wireconn from_type="l4g" to_type="l4g" from_switchpoint="0" to_switchpoint="0"/>-->
			<!--<wireconn from_type="l4g" to_type="l2s" from_switchpoint="0" to_switchpoint="0"/>-->
		<!--</switchblock>-->

		<switchblock name="wilton_straight" type="unidir">
			<switchblock_location type="EVERYWHERE"/>
			<switchfuncs>
				<func type="lr" formula="t"/>
				<func type="bt" formula="t"/>
				<func type="rl" formula="t"/>
				<func type="tb" formula="t"/>
			</switchfuncs>
			<wireconn from_type="l2s" to_type="l2s" from_switchpoint="0" to_switchpoint="0"/>
			<wireconn from_type="l4g" to_type="l4g" from_switchpoint="0" to_switchpoint="0"/>
			<wireconn from_type="l4g" to_type="l2s" from_switchpoint="0" to_switchpoint="0"/>
		</switchblock>
	</switchblocklist>

      <complexblocklist>
      <!-- Capacity is a unique property of I/Os, it is the maximum number of I/Os that can be placed at the same (X,Y) location on the FPGA -->
      <pb_type name="io" capacity="8">
        <input name="outpad" num_pins="1"/>
        <output name="inpad" num_pins="1"/>
        <clock name="clock" num_pins="1"/>

        <!-- IOs can operate as either inputs or outputs -->
        <mode name="inpad">
          <pb_type name="inpad" blif_model=".input" num_pb="1">
            <output name="inpad" num_pins="1"/>
          </pb_type>
          <interconnect>
            <direct name="inpad" input="inpad.inpad" output="io.inpad">
            <delay_constant max="4.243e-11" in_port="inpad.inpad" out_port="io.inpad"/>
            </direct>
          </interconnect>
      
        </mode>
        <mode name="outpad">
          <pb_type name="outpad" blif_model=".output" num_pb="1">
            <input name="outpad" num_pins="1"/>
          </pb_type>
          <interconnect>
            <direct name="outpad" input="io.outpad" output="outpad.outpad">
            <delay_constant max="1.394e-11" in_port="io.outpad" out_port="outpad.outpad"/>
            </direct>
          </interconnect>
        </mode>

        <fc default_in_type="frac" default_in_val="0.200000" default_out_type="frac" default_out_val="0.200000">
		<segment name="l4g" in_val="0" out_val="0.200000"/>
	</fc>

        <!-- IOs go on the periphery of the FPGA, for consistency, 
          make it physically equivalent on all sides so that only one definition of I/Os is needed.
          If I do not make a physically equivalent definition, then I need to define 4 different I/Os, one for each side of the FPGA
        -->
        <pinlocations pattern="custom">
          <loc side="left">io.outpad io.inpad io.clock</loc>
          <loc side="top">io.outpad io.inpad io.clock</loc>
          <loc side="right">io.outpad io.inpad io.clock</loc>
          <loc side="bottom">io.outpad io.inpad io.clock</loc>
        </pinlocations>

        <gridlocations>
          <loc type="perimeter" priority="10"/>
        </gridlocations>

      </pb_type>

    <!-- Logic cluster definition -->
    <!-- k4 N8 I32 with no input crossbar (but LUT inputs are equivalent
         and each LUT has it's own dedicated inputs) -->
    <pb_type name="clb" area="3900">
      <input name="I0" num_pins="4" equivalent="true"/>
      <input name="I1" num_pins="4" equivalent="true"/>
      <input name="I2" num_pins="4" equivalent="true"/>
      <input name="I3" num_pins="4" equivalent="true"/>
      <input name="I4" num_pins="4" equivalent="true"/>
      <input name="I5" num_pins="4" equivalent="true"/>
      <input name="I6" num_pins="4" equivalent="true"/>
      <input name="I7" num_pins="4" equivalent="true"/>
      <output name="O" num_pins="8" equivalent="false"/>
      <clock name="clk" num_pins="1"/>

      <!-- Describe basic logic element. -->
      <!-- Define 4LUT mode -->
          <pb_type name="ble4" num_pb="8">
            <input name="in" num_pins="4"/>
            <output name="out" num_pins="1"/>
            <clock name="clk" num_pins="1"/> 

            <!-- Define LUT -->
            <pb_type name="lut4" blif_model=".names" num_pb="1" class="lut">
              <input name="in" num_pins="4" port_class="lut_in"/>
              <output name="out" num_pins="1" port_class="lut_out"/>
              <!-- LUT timing using delay matrix -->
              <delay_matrix type="max" in_port="lut4.in" out_port="lut4.out">
                1.145e-10
                1.145e-10
                1.145e-10
                1.145e-10
              </delay_matrix>
            </pb_type>

            <!-- Define flip-flop -->
            <pb_type name="ff" blif_model=".latch" num_pb="1" class="flipflop">
              <input name="D" num_pins="1" port_class="D"/>
              <output name="Q" num_pins="1" port_class="Q"/>
              <clock name="clk" num_pins="1" port_class="clock"/>
              <T_setup value="1.891e-11" port="ff.D" clock="clk"/>
              <T_clock_to_Q max="6.032e-11" port="ff.Q" clock="clk"/>
            </pb_type>

            <interconnect>
              <direct name="direct1" input="ble4.in" output="lut4[0:0].in"/>
              <direct name="direct2" input="lut4.out" output="ff.D">
                <!-- Advanced user option that tells CAD tool to find LUT+FF pairs in netlist -->
                <pack_pattern name="ble4" in_port="lut4.out" out_port="ff.D"/>
              </direct>
              <direct name="direct3" input="ble4.clk" output="ff.clk"/>                    
              <mux name="mux1" input="ff.Q lut4.out" output="ble4.out">
                  <delay_constant max="16.6e-12" in_port="lut4.out[0:0]" out_port="ble4.out[0:0]"/>
                  <delay_constant max="30e-12" in_port="ff[0:0].Q" out_port="ble4.out[0:0]"/>
              </mux>
            </interconnect>
          </pb_type>
      <interconnect>
        <!-- each input connects to its respective LUT with input equivalency -->
        <complete name="completeI0" input="clb.I0" output="ble4.in"/>

        <!-- clock -->
        <complete name="clks" input="clb.clk" output="ble4.clk"/>
        <!-- outputs -->
        <direct name="directO" input="ble4.out" output="clb.O"/>
      </interconnect>

        <fc default_in_type="frac" default_in_val="0.200000" default_out_type="frac" default_out_val="0.200000">
		<segment name="l4g" in_val="0" out_val="0.200000"/>
	</fc>

      <pinlocations pattern="spread"/>

      <!-- Place this general purpose logic block in any unspecified column -->
      <gridlocations>
        <loc type="fill" priority="1"/>
      </gridlocations>
    </pb_type>
    <!-- Define general purpose logic block (CLB) ends -->

    </complexblocklist>
  </architecture>