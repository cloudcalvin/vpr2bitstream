<!--
 A architecture with 3-input LUTs. Modified from the provided k4_N4_90nm.xml file from VTR
 Area are manually recalculated post routing for SPGA.
-->

<architecture>

  <!--
       ODIN II specific config begins
       Describes the types of user-specified netlist blocks (in blif, this corresponds to
       ".model [type_of_block]") that this architecture supports.

       Note: Basic LUTs, I/Os, and flip-flops are not included here as there are
       already special structures in blif (.names, .input, .output, and .latch)
       that describe them.
  -->
  <models>
  </models>
  <!-- ODIN II specific config ends -->

  <!-- Physical descriptions begin -->
  <layout  auto="1.0"/>
  <!--<layout width="10" height="10"/>-->
  <device>
    <sizing R_minW_nmos="4220.930176" R_minW_pmos="11207.599609" ipin_mux_trans_size="0.983352"/>
    <timing C_ipin_cblock="0.000000e+00" T_ipin_cblock="8.045000e-11"/>
    <area grid_logic_tile_area="2229.320068"/>
    <chan_width_distr>
      <io width="1.000000"/>
      <x distr="uniform" peak="1.000000"/>
      <y distr="uniform" peak="1.000000"/>
    </chan_width_distr>
    <switch_block type="wilton" fs="3"/>
  </device>
  <switchlist>
    <switch type="mux" name="0" R="0.000000" Cin="0.000000e+00" Cout="0.000000e+00" Tdel="6.244000e-11" mux_trans_size="1.835460" buf_size="10.498600"/>
  </switchlist>

  <segmentlist>
    <segment freq="1.000000" length="1" type="unidir" Rmetal="0.000000" Cmetal="0.000000e+00">
    <mux name="0"/>
    <sb type="pattern">1 1</sb>
    <cb type="pattern">1</cb>
    </segment>
  </segmentlist>


  <complexblocklist>

    <!-- Define I/O pads begin -->
    <!-- Capacity is a unique property of I/Os, it is the maximum number of I/Os that can be placed at the same (X,Y) location on the FPGA -->
    <pb_type name="io" capacity="1">
      <input name="outpad" num_pins="1"/>
      <output name="inpad" num_pins="1"/>
      <clock name="clock" num_pins="1"/>

      <!-- IOs can operate as either inputs or outputs.
	     Delays below come from Ian Kuon. They are small, so they should be interpreted as
	     the delays to and from registers in the I/O (and generally I/Os are registered
	     today and that is when you timing analyze them.
	     -->
      <mode name="inpad">
        <pb_type name="inpad" blif_model=".input" num_pb="1">
          <output name="inpad" num_pins="1"/>
        </pb_type>
        <interconnect>
          <direct name="inpad" input="inpad.inpad" output="io.inpad">
            <delay_constant max="0" in_port="inpad.inpad" out_port="io.inpad"/>
          </direct>
        </interconnect>

      </mode>
      <mode name="outpad">
        <pb_type name="outpad" blif_model=".output" num_pb="1">
          <input name="outpad" num_pins="1"/>
        </pb_type>
        <interconnect>
          <direct name="outpad" input="io.outpad" output="outpad.outpad">
            <delay_constant max="0" in_port="io.outpad" out_port="outpad.outpad"/>
          </direct>
        </interconnect>
      </mode>
      <mode name="clock">
        <pb_type name="outpad" blif_model=".output" num_pb="1">
          <input name="outpad" num_pins="1"/>
        </pb_type>
        <interconnect>
          <direct name="outpad" input="io.outpad" output="outpad.outpad">
            <delay_constant max="0" in_port="io.outpad" out_port="outpad.outpad"/>
          </direct>
        </interconnect>
      </mode>
      <!-- Every input pin is driven by 15% of the tracks in a channel, every output pin is driven by 10% of the tracks in a channel -->
      <fc default_in_type="frac" default_in_val="1.0" default_out_type="frac" default_out_val="1.0"/>

      <!-- IOs go on the periphery of the FPGA, for consistency,
          make it physically equivalent on all sides so that only one definition of I/Os is needed.
          If I do not make a physically equivalent definition, then I need to define 4 different I/Os, one for each side of the FPGA
        -->
      <pinlocations pattern="custom">
        <loc side="left">io.outpad io.inpad io.clock</loc>
        <loc side="top">io.outpad io.inpad io.clock</loc>
        <loc side="right">io.outpad io.inpad io.clock</loc>
        <loc side="bottom">io.outpad io.inpad io.clock</loc>
      </pinlocations>

      <!-- Place I/Os on the sides of the FPGA -->
      <gridlocations>
        <loc type="perimeter" priority="10"/>
      </gridlocations>

      <power method="ignore"/>
    </pb_type>
    <!-- Define I/O pads ends -->

    <!-- Define general purpose logic block (CLB) begin -->
    <pb_type name="clb">
      <input name="in" num_pins="3" equivalent="false"/>
      <output name="out" num_pins="1" equivalent="true"/>
      <clock name="clk" num_pins="1"/>

        <!-- 4-LUT mode definition begin -->
        <mode name="n1_lut3">
          <!-- Define 4-LUT mode -->
          <pb_type name="ble3" num_pb="1">
            <input name="in" num_pins="3"/>
            <output name="out" num_pins="1"/>
            <clock name="clk" num_pins="1"/>

            <!-- Define LUT -->
            <pb_type name="lut3" blif_model=".names" num_pb="1" class="lut">
              <input name="in" num_pins="3" port_class="lut_in"/>
              <output name="out" num_pins="1" port_class="lut_out"/>
              <!-- LUT timing using delay matrix -->
              <delay_matrix type="max" in_port="lut3.in" out_port="lut3.out">
                2.253000e-10
                2.253000e-10
                2.253000e-10
              </delay_matrix>
            </pb_type>

            <!-- Define flip-flop -->
            <pb_type name="ff" blif_model=".latch" num_pb="1" class="flipflop">
              <input name="D" num_pins="1" port_class="D"/>
              <output name="Q" num_pins="1" port_class="Q"/>
              <clock name="clk" num_pins="1" port_class="clock"/>
              <T_setup value="2.160000e-10" port="ff.D" clock="clk"/>
              <T_clock_to_Q max="1.426000e-10" port="ff.Q" clock="clk"/>
            </pb_type>

            <interconnect>
              <direct name="direct1" input="ble3.in" output="lut3[0:0].in"/>
              <direct name="direct2" input="lut3.out" output="ff.D">
                <!-- Advanced user option that tells CAD tool to find LUT+FF pairs in netlist -->
                <pack_pattern name="ble3" in_port="lut3.out" out_port="ff.D"/>
              </direct>
              <direct name="direct3" input="ble3.clk" output="ff.clk"/>
              <!--<mux name="mux1" input="ff.Q lut3.out" output="ble3.out[0]"/>-->
              <!--<mux name="mux2" input="ff.Q lut3.out" output="ble3.out[1]"/>-->
              <mux name="mux1" input="ff.Q lut3.out" output="ble3.out"/>
            </interconnect>
          </pb_type>
          <interconnect>
            <direct name="clks" input="clb.clk" output="ble3.clk"/>
            <direct name="direct1" input="clb.in" output="ble3.in"/>
            <direct name="direct2" input="ble3.out" output="clb.out"/>
            <!--<direct name="direct2" input="ble3.out" output="clb.out[0]"/>-->
            <!--<direct name="direct4" input="ble3.out" output="clb.out[1]"/>-->
            <!--<direct name="direct3" input="clb.clk" output="ble3.clk"/>-->
          </interconnect>
        </mode>

      <!-- Every input pin is driven by 15% of the tracks in a channel, every output pin is driven by 25% of the tracks in a channel -->
      <fc default_in_type="frac" default_in_val="1.0" default_out_type="frac" default_out_val="1.0"/>

      <!--<pinlocations pattern="spread"/>-->

       <pinlocations pattern="custom">
        <loc side="top">clb.in[2] clb.out</loc>
        <loc side="right">clb.in[0]</loc>
        <loc side="bottom">clb.in[1]</loc>
        <loc side="left">clb.out</loc>
      </pinlocations>

      <!-- Place this general purpose logic block in any unspecified column -->
      <gridlocations>
        <loc type="fill" priority="1"/>
        <!--<loc type="rel" pos="float" priority="int"/>-->
      </gridlocations>
    </pb_type>
    <!-- Define general purpose logic block (CLB) ends -->

  </complexblocklist>
</architecture>
